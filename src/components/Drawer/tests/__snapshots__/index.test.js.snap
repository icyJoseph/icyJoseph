// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Drawer renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    Content={[Function]}
    close={[Function]}
    visibility={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "animation": "overlay",
      "as": [Function],
      "background": undefined,
      "children": Array [
        <Button
          as="button"
          onClick={[Function]}
>
          Close
</Button>,
        <Segment
          basic={true}
          style={
                    Object {
                              "marginBottom": "60px",
                            }
          }
>
          <mockConstructor />
</Segment>,
      ],
      "direction": "right",
      "visible": true,
      "width": "wide",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "button",
          "children": "Close",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Close",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "basic": true,
          "children": <mockConstructor />,
          "style": Object {
            "marginBottom": "60px",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "animation": "overlay",
        "as": [Function],
        "background": undefined,
        "children": Array [
          <Button
            as="button"
            onClick={[Function]}
>
            Close
</Button>,
          <Segment
            basic={true}
            style={
                        Object {
                                    "marginBottom": "60px",
                                  }
            }
>
            <mockConstructor />
</Segment>,
        ],
        "direction": "right",
        "visible": true,
        "width": "wide",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": "Close",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Close",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "basic": true,
            "children": <mockConstructor />,
            "style": Object {
              "marginBottom": "60px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
