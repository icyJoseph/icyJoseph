// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Contact renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    handleClose={[Function]}
    open={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <ModalHeader>
          Contact
</ModalHeader>,
        <ModalContent>
          <ModalDescription>
                    <Header>
                              Email
                    </Header>
                    <p>
                              You can reach me via email to:
                    </p>
                    <p>
                              contact@icjoseph.com
                    </p>
          </ModalDescription>
</ModalContent>,
        <ModalActions>
          <Button
                    as="button"
                    color="black"
                    onClick={[Function]}
          >
                    Close
          </Button>
</ModalActions>,
      ],
      "dimmer": true,
      "onClose": [Function],
      "open": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Contact",
        },
        "ref": null,
        "rendered": "Contact",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ModalDescription>
            <Header>
                        Email
            </Header>
            <p>
                        You can reach me via email to:
            </p>
            <p>
                        contact@icjoseph.com
            </p>
</ModalDescription>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Header>
                Email
</Header>,
              <p>
                You can reach me via email to:
</p>,
              <p>
                contact@icjoseph.com
</p>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Email",
              },
              "ref": null,
              "rendered": "Email",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "You can reach me via email to:",
              },
              "ref": null,
              "rendered": "You can reach me via email to:",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "contact@icjoseph.com",
              },
              "ref": null,
              "rendered": "contact@icjoseph.com",
              "type": "p",
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Button
            as="button"
            color="black"
            onClick={[Function]}
>
            Close
</Button>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": "Close",
            "color": "black",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Close",
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <ModalHeader>
            Contact
</ModalHeader>,
          <ModalContent>
            <ModalDescription>
                        <Header>
                                    Email
                        </Header>
                        <p>
                                    You can reach me via email to:
                        </p>
                        <p>
                                    contact@icjoseph.com
                        </p>
            </ModalDescription>
</ModalContent>,
          <ModalActions>
            <Button
                        as="button"
                        color="black"
                        onClick={[Function]}
            >
                        Close
            </Button>
</ModalActions>,
        ],
        "dimmer": true,
        "onClose": [Function],
        "open": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Contact",
          },
          "ref": null,
          "rendered": "Contact",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ModalDescription>
              <Header>
                            Email
              </Header>
              <p>
                            You can reach me via email to:
              </p>
              <p>
                            contact@icjoseph.com
              </p>
</ModalDescription>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Header>
                  Email
</Header>,
                <p>
                  You can reach me via email to:
</p>,
                <p>
                  contact@icjoseph.com
</p>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Email",
                },
                "ref": null,
                "rendered": "Email",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "You can reach me via email to:",
                },
                "ref": null,
                "rendered": "You can reach me via email to:",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "contact@icjoseph.com",
                },
                "ref": null,
                "rendered": "contact@icjoseph.com",
                "type": "p",
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Button
              as="button"
              color="black"
              onClick={[Function]}
>
              Close
</Button>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "children": "Close",
              "color": "black",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Close",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
