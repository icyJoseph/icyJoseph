// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Statistics renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Statistics
    commits={10}
    languages={
      Array [
        Object {
          "bytes": 200000,
          "lang": "javascript",
        },
      ]
    }
    publicRepos={10}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Styled(StatisticGroup)
          inverted={true}
          widths={3}
        >
          <Styled(Statistic)>
            <Styled(StatisticValue)>
              <Icon
                as="i"
                name="github alternate"
              />
              <CountUp
                decimal="."
                decimals={0}
                duration={3}
                easingFn={null}
                end={10}
                formattingFn={null}
                prefix=""
                redraw={false}
                separator=""
                start={0}
                suffix=""
                useEasing={true}
              />
            </Styled(StatisticValue)>
            <Styled(StatisticLabel)>
              Public Repos
            </Styled(StatisticLabel)>
          </Styled(Statistic)>
          <Styled(Statistic)>
            <Styled(StatisticValue)>
              <CountUp
                decimal="."
                decimals={0}
                duration={3}
                easingFn={null}
                end={10}
                formattingFn={null}
                prefix=""
                redraw={false}
                separator=""
                start={0}
                suffix=""
                useEasing={true}
              />
            </Styled(StatisticValue)>
            <Styled(StatisticLabel)>
              Commits
            </Styled(StatisticLabel)>
          </Styled(Statistic)>
          <Styled(Statistic)>
            <Styled(StatisticValue)>
              <CountUp
                decimal="."
                decimals={0}
                duration={3}
                easingFn={null}
                end={0}
                formattingFn={null}
                prefix=""
                redraw={false}
                separator=""
                start={0}
                suffix=""
                useEasing={true}
              />
            </Styled(StatisticValue)>
            <Styled(StatisticLabel)>
              Public Gists
            </Styled(StatisticLabel)>
          </Styled(Statistic)>
        </Styled(StatisticGroup)>,
        <Styled(StatisticGroup)
          inverted={true}
          widths={2}
        >
          <Styled(Statistic)>
            <Styled(StatisticValue)>
              <LangIcon />
              <CountUp
                decimal="."
                decimals={0}
                duration={3}
                easingFn={null}
                end={200000}
                formattingFn={null}
                prefix=""
                redraw={false}
                separator=""
                start={0}
                suffix=""
                useEasing={true}
              />
            </Styled(StatisticValue)>
            <Styled(StatisticLabel)>
              bytes in 
              javascript
            </Styled(StatisticLabel)>
          </Styled(Statistic)>
        </Styled(StatisticGroup)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(Statistic)>
              <Styled(StatisticValue)>
                <Icon
                  as="i"
                  name="github alternate"
                />
                <CountUp
                  decimal="."
                  decimals={0}
                  duration={3}
                  easingFn={null}
                  end={10}
                  formattingFn={null}
                  prefix=""
                  redraw={false}
                  separator=""
                  start={0}
                  suffix=""
                  useEasing={true}
                />
              </Styled(StatisticValue)>
              <Styled(StatisticLabel)>
                Public Repos
              </Styled(StatisticLabel)>
            </Styled(Statistic)>,
            <Styled(Statistic)>
              <Styled(StatisticValue)>
                <CountUp
                  decimal="."
                  decimals={0}
                  duration={3}
                  easingFn={null}
                  end={10}
                  formattingFn={null}
                  prefix=""
                  redraw={false}
                  separator=""
                  start={0}
                  suffix=""
                  useEasing={true}
                />
              </Styled(StatisticValue)>
              <Styled(StatisticLabel)>
                Commits
              </Styled(StatisticLabel)>
            </Styled(Statistic)>,
            <Styled(Statistic)>
              <Styled(StatisticValue)>
                <CountUp
                  decimal="."
                  decimals={0}
                  duration={3}
                  easingFn={null}
                  end={0}
                  formattingFn={null}
                  prefix=""
                  redraw={false}
                  separator=""
                  start={0}
                  suffix=""
                  useEasing={true}
                />
              </Styled(StatisticValue)>
              <Styled(StatisticLabel)>
                Public Gists
              </Styled(StatisticLabel)>
            </Styled(Statistic)>,
          ],
          "inverted": true,
          "widths": 3,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(StatisticValue)>
                  <Icon
                    as="i"
                    name="github alternate"
                  />
                  <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={10}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />
                </Styled(StatisticValue)>,
                <Styled(StatisticLabel)>
                  Public Repos
                </Styled(StatisticLabel)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Icon
                      as="i"
                      name="github alternate"
                    />,
                    <CountUp
                      decimal="."
                      decimals={0}
                      duration={3}
                      easingFn={null}
                      end={10}
                      formattingFn={null}
                      prefix=""
                      redraw={false}
                      separator=""
                      start={0}
                      suffix=""
                      useEasing={true}
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "i",
                      "name": "github alternate",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": undefined,
                      "decimal": ".",
                      "decimals": 0,
                      "duration": 3,
                      "easingFn": null,
                      "end": 10,
                      "formattingFn": null,
                      "onComplete": undefined,
                      "onStart": undefined,
                      "prefix": "",
                      "redraw": false,
                      "separator": "",
                      "start": 0,
                      "style": undefined,
                      "suffix": "",
                      "useEasing": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Public Repos",
                },
                "ref": null,
                "rendered": "Public Repos",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(StatisticValue)>
                  <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={10}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />
                </Styled(StatisticValue)>,
                <Styled(StatisticLabel)>
                  Commits
                </Styled(StatisticLabel)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={10}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": undefined,
                    "decimal": ".",
                    "decimals": 0,
                    "duration": 3,
                    "easingFn": null,
                    "end": 10,
                    "formattingFn": null,
                    "onComplete": undefined,
                    "onStart": undefined,
                    "prefix": "",
                    "redraw": false,
                    "separator": "",
                    "start": 0,
                    "style": undefined,
                    "suffix": "",
                    "useEasing": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Commits",
                },
                "ref": null,
                "rendered": "Commits",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(StatisticValue)>
                  <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={0}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />
                </Styled(StatisticValue)>,
                <Styled(StatisticLabel)>
                  Public Gists
                </Styled(StatisticLabel)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={0}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": undefined,
                    "decimal": ".",
                    "decimals": 0,
                    "duration": 3,
                    "easingFn": null,
                    "end": 0,
                    "formattingFn": null,
                    "onComplete": undefined,
                    "onStart": undefined,
                    "prefix": "",
                    "redraw": false,
                    "separator": "",
                    "start": 0,
                    "style": undefined,
                    "suffix": "",
                    "useEasing": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Public Gists",
                },
                "ref": null,
                "rendered": "Public Gists",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(Statistic)>
              <Styled(StatisticValue)>
                <LangIcon />
                <CountUp
                  decimal="."
                  decimals={0}
                  duration={3}
                  easingFn={null}
                  end={200000}
                  formattingFn={null}
                  prefix=""
                  redraw={false}
                  separator=""
                  start={0}
                  suffix=""
                  useEasing={true}
                />
              </Styled(StatisticValue)>
              <Styled(StatisticLabel)>
                bytes in 
                javascript
              </Styled(StatisticLabel)>
            </Styled(Statistic)>,
          ],
          "inverted": true,
          "widths": 2,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "javascript",
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(StatisticValue)>
                  <LangIcon />
                  <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={200000}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />
                </Styled(StatisticValue)>,
                <Styled(StatisticLabel)>
                  bytes in 
                  javascript
                </Styled(StatisticLabel)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <LangIcon />,
                    <CountUp
                      decimal="."
                      decimals={0}
                      duration={3}
                      easingFn={null}
                      end={200000}
                      formattingFn={null}
                      prefix=""
                      redraw={false}
                      separator=""
                      start={0}
                      suffix=""
                      useEasing={true}
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "icon": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": undefined,
                      "decimal": ".",
                      "decimals": 0,
                      "duration": 3,
                      "easingFn": null,
                      "end": 200000,
                      "formattingFn": null,
                      "onComplete": undefined,
                      "onStart": undefined,
                      "prefix": "",
                      "redraw": false,
                      "separator": "",
                      "start": 0,
                      "style": undefined,
                      "suffix": "",
                      "useEasing": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "bytes in ",
                    "javascript",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "bytes in ",
                  "javascript",
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Styled(StatisticGroup)
            inverted={true}
            widths={3}
          >
            <Styled(Statistic)>
              <Styled(StatisticValue)>
                <Icon
                  as="i"
                  name="github alternate"
                />
                <CountUp
                  decimal="."
                  decimals={0}
                  duration={3}
                  easingFn={null}
                  end={10}
                  formattingFn={null}
                  prefix=""
                  redraw={false}
                  separator=""
                  start={0}
                  suffix=""
                  useEasing={true}
                />
              </Styled(StatisticValue)>
              <Styled(StatisticLabel)>
                Public Repos
              </Styled(StatisticLabel)>
            </Styled(Statistic)>
            <Styled(Statistic)>
              <Styled(StatisticValue)>
                <CountUp
                  decimal="."
                  decimals={0}
                  duration={3}
                  easingFn={null}
                  end={10}
                  formattingFn={null}
                  prefix=""
                  redraw={false}
                  separator=""
                  start={0}
                  suffix=""
                  useEasing={true}
                />
              </Styled(StatisticValue)>
              <Styled(StatisticLabel)>
                Commits
              </Styled(StatisticLabel)>
            </Styled(Statistic)>
            <Styled(Statistic)>
              <Styled(StatisticValue)>
                <CountUp
                  decimal="."
                  decimals={0}
                  duration={3}
                  easingFn={null}
                  end={0}
                  formattingFn={null}
                  prefix=""
                  redraw={false}
                  separator=""
                  start={0}
                  suffix=""
                  useEasing={true}
                />
              </Styled(StatisticValue)>
              <Styled(StatisticLabel)>
                Public Gists
              </Styled(StatisticLabel)>
            </Styled(Statistic)>
          </Styled(StatisticGroup)>,
          <Styled(StatisticGroup)
            inverted={true}
            widths={2}
          >
            <Styled(Statistic)>
              <Styled(StatisticValue)>
                <LangIcon />
                <CountUp
                  decimal="."
                  decimals={0}
                  duration={3}
                  easingFn={null}
                  end={200000}
                  formattingFn={null}
                  prefix=""
                  redraw={false}
                  separator=""
                  start={0}
                  suffix=""
                  useEasing={true}
                />
              </Styled(StatisticValue)>
              <Styled(StatisticLabel)>
                bytes in 
                javascript
              </Styled(StatisticLabel)>
            </Styled(Statistic)>
          </Styled(StatisticGroup)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(Statistic)>
                <Styled(StatisticValue)>
                  <Icon
                    as="i"
                    name="github alternate"
                  />
                  <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={10}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />
                </Styled(StatisticValue)>
                <Styled(StatisticLabel)>
                  Public Repos
                </Styled(StatisticLabel)>
              </Styled(Statistic)>,
              <Styled(Statistic)>
                <Styled(StatisticValue)>
                  <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={10}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />
                </Styled(StatisticValue)>
                <Styled(StatisticLabel)>
                  Commits
                </Styled(StatisticLabel)>
              </Styled(Statistic)>,
              <Styled(Statistic)>
                <Styled(StatisticValue)>
                  <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={0}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />
                </Styled(StatisticValue)>
                <Styled(StatisticLabel)>
                  Public Gists
                </Styled(StatisticLabel)>
              </Styled(Statistic)>,
            ],
            "inverted": true,
            "widths": 3,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(StatisticValue)>
                    <Icon
                      as="i"
                      name="github alternate"
                    />
                    <CountUp
                      decimal="."
                      decimals={0}
                      duration={3}
                      easingFn={null}
                      end={10}
                      formattingFn={null}
                      prefix=""
                      redraw={false}
                      separator=""
                      start={0}
                      suffix=""
                      useEasing={true}
                    />
                  </Styled(StatisticValue)>,
                  <Styled(StatisticLabel)>
                    Public Repos
                  </Styled(StatisticLabel)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Icon
                        as="i"
                        name="github alternate"
                      />,
                      <CountUp
                        decimal="."
                        decimals={0}
                        duration={3}
                        easingFn={null}
                        end={10}
                        formattingFn={null}
                        prefix=""
                        redraw={false}
                        separator=""
                        start={0}
                        suffix=""
                        useEasing={true}
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "as": "i",
                        "name": "github alternate",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": undefined,
                        "decimal": ".",
                        "decimals": 0,
                        "duration": 3,
                        "easingFn": null,
                        "end": 10,
                        "formattingFn": null,
                        "onComplete": undefined,
                        "onStart": undefined,
                        "prefix": "",
                        "redraw": false,
                        "separator": "",
                        "start": 0,
                        "style": undefined,
                        "suffix": "",
                        "useEasing": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Public Repos",
                  },
                  "ref": null,
                  "rendered": "Public Repos",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(StatisticValue)>
                    <CountUp
                      decimal="."
                      decimals={0}
                      duration={3}
                      easingFn={null}
                      end={10}
                      formattingFn={null}
                      prefix=""
                      redraw={false}
                      separator=""
                      start={0}
                      suffix=""
                      useEasing={true}
                    />
                  </Styled(StatisticValue)>,
                  <Styled(StatisticLabel)>
                    Commits
                  </Styled(StatisticLabel)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <CountUp
                      decimal="."
                      decimals={0}
                      duration={3}
                      easingFn={null}
                      end={10}
                      formattingFn={null}
                      prefix=""
                      redraw={false}
                      separator=""
                      start={0}
                      suffix=""
                      useEasing={true}
                    />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": undefined,
                      "decimal": ".",
                      "decimals": 0,
                      "duration": 3,
                      "easingFn": null,
                      "end": 10,
                      "formattingFn": null,
                      "onComplete": undefined,
                      "onStart": undefined,
                      "prefix": "",
                      "redraw": false,
                      "separator": "",
                      "start": 0,
                      "style": undefined,
                      "suffix": "",
                      "useEasing": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Commits",
                  },
                  "ref": null,
                  "rendered": "Commits",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(StatisticValue)>
                    <CountUp
                      decimal="."
                      decimals={0}
                      duration={3}
                      easingFn={null}
                      end={0}
                      formattingFn={null}
                      prefix=""
                      redraw={false}
                      separator=""
                      start={0}
                      suffix=""
                      useEasing={true}
                    />
                  </Styled(StatisticValue)>,
                  <Styled(StatisticLabel)>
                    Public Gists
                  </Styled(StatisticLabel)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <CountUp
                      decimal="."
                      decimals={0}
                      duration={3}
                      easingFn={null}
                      end={0}
                      formattingFn={null}
                      prefix=""
                      redraw={false}
                      separator=""
                      start={0}
                      suffix=""
                      useEasing={true}
                    />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": undefined,
                      "decimal": ".",
                      "decimals": 0,
                      "duration": 3,
                      "easingFn": null,
                      "end": 0,
                      "formattingFn": null,
                      "onComplete": undefined,
                      "onStart": undefined,
                      "prefix": "",
                      "redraw": false,
                      "separator": "",
                      "start": 0,
                      "style": undefined,
                      "suffix": "",
                      "useEasing": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Public Gists",
                  },
                  "ref": null,
                  "rendered": "Public Gists",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(Statistic)>
                <Styled(StatisticValue)>
                  <LangIcon />
                  <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={200000}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />
                </Styled(StatisticValue)>
                <Styled(StatisticLabel)>
                  bytes in 
                  javascript
                </Styled(StatisticLabel)>
              </Styled(Statistic)>,
            ],
            "inverted": true,
            "widths": 2,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "javascript",
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(StatisticValue)>
                    <LangIcon />
                    <CountUp
                      decimal="."
                      decimals={0}
                      duration={3}
                      easingFn={null}
                      end={200000}
                      formattingFn={null}
                      prefix=""
                      redraw={false}
                      separator=""
                      start={0}
                      suffix=""
                      useEasing={true}
                    />
                  </Styled(StatisticValue)>,
                  <Styled(StatisticLabel)>
                    bytes in 
                    javascript
                  </Styled(StatisticLabel)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <LangIcon />,
                      <CountUp
                        decimal="."
                        decimals={0}
                        duration={3}
                        easingFn={null}
                        end={200000}
                        formattingFn={null}
                        prefix=""
                        redraw={false}
                        separator=""
                        start={0}
                        suffix=""
                        useEasing={true}
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "icon": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": undefined,
                        "decimal": ".",
                        "decimals": 0,
                        "duration": 3,
                        "easingFn": null,
                        "end": 200000,
                        "formattingFn": null,
                        "onComplete": undefined,
                        "onStart": undefined,
                        "prefix": "",
                        "redraw": false,
                        "separator": "",
                        "start": 0,
                        "style": undefined,
                        "suffix": "",
                        "useEasing": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "bytes in ",
                      "javascript",
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "bytes in ",
                    "javascript",
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Statistics renders empty 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Statistics />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Styled(StatisticGroup)
          inverted={true}
          widths={3}
        >
          <Styled(Statistic)>
            <Styled(StatisticValue)>
              <Icon
                as="i"
                name="github alternate"
              />
              <CountUp
                decimal="."
                decimals={0}
                duration={3}
                easingFn={null}
                end={0}
                formattingFn={null}
                prefix=""
                redraw={false}
                separator=""
                start={0}
                suffix=""
                useEasing={true}
              />
            </Styled(StatisticValue)>
            <Styled(StatisticLabel)>
              Public Repos
            </Styled(StatisticLabel)>
          </Styled(Statistic)>
          <Styled(Statistic)>
            <Styled(StatisticValue)>
              <CountUp
                decimal="."
                decimals={0}
                duration={3}
                easingFn={null}
                end={0}
                formattingFn={null}
                prefix=""
                redraw={false}
                separator=""
                start={0}
                suffix=""
                useEasing={true}
              />
            </Styled(StatisticValue)>
            <Styled(StatisticLabel)>
              Commits
            </Styled(StatisticLabel)>
          </Styled(Statistic)>
          <Styled(Statistic)>
            <Styled(StatisticValue)>
              <CountUp
                decimal="."
                decimals={0}
                duration={3}
                easingFn={null}
                end={0}
                formattingFn={null}
                prefix=""
                redraw={false}
                separator=""
                start={0}
                suffix=""
                useEasing={true}
              />
            </Styled(StatisticValue)>
            <Styled(StatisticLabel)>
              Public Gists
            </Styled(StatisticLabel)>
          </Styled(Statistic)>
        </Styled(StatisticGroup)>,
        <Styled(StatisticGroup)
          inverted={true}
          widths={2}
        >
          <Loader
            active={true}
            inline="centered"
          />
        </Styled(StatisticGroup)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(Statistic)>
              <Styled(StatisticValue)>
                <Icon
                  as="i"
                  name="github alternate"
                />
                <CountUp
                  decimal="."
                  decimals={0}
                  duration={3}
                  easingFn={null}
                  end={0}
                  formattingFn={null}
                  prefix=""
                  redraw={false}
                  separator=""
                  start={0}
                  suffix=""
                  useEasing={true}
                />
              </Styled(StatisticValue)>
              <Styled(StatisticLabel)>
                Public Repos
              </Styled(StatisticLabel)>
            </Styled(Statistic)>,
            <Styled(Statistic)>
              <Styled(StatisticValue)>
                <CountUp
                  decimal="."
                  decimals={0}
                  duration={3}
                  easingFn={null}
                  end={0}
                  formattingFn={null}
                  prefix=""
                  redraw={false}
                  separator=""
                  start={0}
                  suffix=""
                  useEasing={true}
                />
              </Styled(StatisticValue)>
              <Styled(StatisticLabel)>
                Commits
              </Styled(StatisticLabel)>
            </Styled(Statistic)>,
            <Styled(Statistic)>
              <Styled(StatisticValue)>
                <CountUp
                  decimal="."
                  decimals={0}
                  duration={3}
                  easingFn={null}
                  end={0}
                  formattingFn={null}
                  prefix=""
                  redraw={false}
                  separator=""
                  start={0}
                  suffix=""
                  useEasing={true}
                />
              </Styled(StatisticValue)>
              <Styled(StatisticLabel)>
                Public Gists
              </Styled(StatisticLabel)>
            </Styled(Statistic)>,
          ],
          "inverted": true,
          "widths": 3,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(StatisticValue)>
                  <Icon
                    as="i"
                    name="github alternate"
                  />
                  <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={0}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />
                </Styled(StatisticValue)>,
                <Styled(StatisticLabel)>
                  Public Repos
                </Styled(StatisticLabel)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Icon
                      as="i"
                      name="github alternate"
                    />,
                    <CountUp
                      decimal="."
                      decimals={0}
                      duration={3}
                      easingFn={null}
                      end={0}
                      formattingFn={null}
                      prefix=""
                      redraw={false}
                      separator=""
                      start={0}
                      suffix=""
                      useEasing={true}
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "i",
                      "name": "github alternate",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": undefined,
                      "decimal": ".",
                      "decimals": 0,
                      "duration": 3,
                      "easingFn": null,
                      "end": 0,
                      "formattingFn": null,
                      "onComplete": undefined,
                      "onStart": undefined,
                      "prefix": "",
                      "redraw": false,
                      "separator": "",
                      "start": 0,
                      "style": undefined,
                      "suffix": "",
                      "useEasing": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Public Repos",
                },
                "ref": null,
                "rendered": "Public Repos",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(StatisticValue)>
                  <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={0}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />
                </Styled(StatisticValue)>,
                <Styled(StatisticLabel)>
                  Commits
                </Styled(StatisticLabel)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={0}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": undefined,
                    "decimal": ".",
                    "decimals": 0,
                    "duration": 3,
                    "easingFn": null,
                    "end": 0,
                    "formattingFn": null,
                    "onComplete": undefined,
                    "onStart": undefined,
                    "prefix": "",
                    "redraw": false,
                    "separator": "",
                    "start": 0,
                    "style": undefined,
                    "suffix": "",
                    "useEasing": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Commits",
                },
                "ref": null,
                "rendered": "Commits",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(StatisticValue)>
                  <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={0}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />
                </Styled(StatisticValue)>,
                <Styled(StatisticLabel)>
                  Public Gists
                </Styled(StatisticLabel)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={0}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": undefined,
                    "decimal": ".",
                    "decimals": 0,
                    "duration": 3,
                    "easingFn": null,
                    "end": 0,
                    "formattingFn": null,
                    "onComplete": undefined,
                    "onStart": undefined,
                    "prefix": "",
                    "redraw": false,
                    "separator": "",
                    "start": 0,
                    "style": undefined,
                    "suffix": "",
                    "useEasing": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Public Gists",
                },
                "ref": null,
                "rendered": "Public Gists",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Loader
            active={true}
            inline="centered"
          />,
          "inverted": true,
          "widths": 2,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "active": true,
            "inline": "centered",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Styled(StatisticGroup)
            inverted={true}
            widths={3}
          >
            <Styled(Statistic)>
              <Styled(StatisticValue)>
                <Icon
                  as="i"
                  name="github alternate"
                />
                <CountUp
                  decimal="."
                  decimals={0}
                  duration={3}
                  easingFn={null}
                  end={0}
                  formattingFn={null}
                  prefix=""
                  redraw={false}
                  separator=""
                  start={0}
                  suffix=""
                  useEasing={true}
                />
              </Styled(StatisticValue)>
              <Styled(StatisticLabel)>
                Public Repos
              </Styled(StatisticLabel)>
            </Styled(Statistic)>
            <Styled(Statistic)>
              <Styled(StatisticValue)>
                <CountUp
                  decimal="."
                  decimals={0}
                  duration={3}
                  easingFn={null}
                  end={0}
                  formattingFn={null}
                  prefix=""
                  redraw={false}
                  separator=""
                  start={0}
                  suffix=""
                  useEasing={true}
                />
              </Styled(StatisticValue)>
              <Styled(StatisticLabel)>
                Commits
              </Styled(StatisticLabel)>
            </Styled(Statistic)>
            <Styled(Statistic)>
              <Styled(StatisticValue)>
                <CountUp
                  decimal="."
                  decimals={0}
                  duration={3}
                  easingFn={null}
                  end={0}
                  formattingFn={null}
                  prefix=""
                  redraw={false}
                  separator=""
                  start={0}
                  suffix=""
                  useEasing={true}
                />
              </Styled(StatisticValue)>
              <Styled(StatisticLabel)>
                Public Gists
              </Styled(StatisticLabel)>
            </Styled(Statistic)>
          </Styled(StatisticGroup)>,
          <Styled(StatisticGroup)
            inverted={true}
            widths={2}
          >
            <Loader
              active={true}
              inline="centered"
            />
          </Styled(StatisticGroup)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(Statistic)>
                <Styled(StatisticValue)>
                  <Icon
                    as="i"
                    name="github alternate"
                  />
                  <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={0}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />
                </Styled(StatisticValue)>
                <Styled(StatisticLabel)>
                  Public Repos
                </Styled(StatisticLabel)>
              </Styled(Statistic)>,
              <Styled(Statistic)>
                <Styled(StatisticValue)>
                  <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={0}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />
                </Styled(StatisticValue)>
                <Styled(StatisticLabel)>
                  Commits
                </Styled(StatisticLabel)>
              </Styled(Statistic)>,
              <Styled(Statistic)>
                <Styled(StatisticValue)>
                  <CountUp
                    decimal="."
                    decimals={0}
                    duration={3}
                    easingFn={null}
                    end={0}
                    formattingFn={null}
                    prefix=""
                    redraw={false}
                    separator=""
                    start={0}
                    suffix=""
                    useEasing={true}
                  />
                </Styled(StatisticValue)>
                <Styled(StatisticLabel)>
                  Public Gists
                </Styled(StatisticLabel)>
              </Styled(Statistic)>,
            ],
            "inverted": true,
            "widths": 3,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(StatisticValue)>
                    <Icon
                      as="i"
                      name="github alternate"
                    />
                    <CountUp
                      decimal="."
                      decimals={0}
                      duration={3}
                      easingFn={null}
                      end={0}
                      formattingFn={null}
                      prefix=""
                      redraw={false}
                      separator=""
                      start={0}
                      suffix=""
                      useEasing={true}
                    />
                  </Styled(StatisticValue)>,
                  <Styled(StatisticLabel)>
                    Public Repos
                  </Styled(StatisticLabel)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Icon
                        as="i"
                        name="github alternate"
                      />,
                      <CountUp
                        decimal="."
                        decimals={0}
                        duration={3}
                        easingFn={null}
                        end={0}
                        formattingFn={null}
                        prefix=""
                        redraw={false}
                        separator=""
                        start={0}
                        suffix=""
                        useEasing={true}
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "as": "i",
                        "name": "github alternate",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": undefined,
                        "decimal": ".",
                        "decimals": 0,
                        "duration": 3,
                        "easingFn": null,
                        "end": 0,
                        "formattingFn": null,
                        "onComplete": undefined,
                        "onStart": undefined,
                        "prefix": "",
                        "redraw": false,
                        "separator": "",
                        "start": 0,
                        "style": undefined,
                        "suffix": "",
                        "useEasing": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Public Repos",
                  },
                  "ref": null,
                  "rendered": "Public Repos",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(StatisticValue)>
                    <CountUp
                      decimal="."
                      decimals={0}
                      duration={3}
                      easingFn={null}
                      end={0}
                      formattingFn={null}
                      prefix=""
                      redraw={false}
                      separator=""
                      start={0}
                      suffix=""
                      useEasing={true}
                    />
                  </Styled(StatisticValue)>,
                  <Styled(StatisticLabel)>
                    Commits
                  </Styled(StatisticLabel)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <CountUp
                      decimal="."
                      decimals={0}
                      duration={3}
                      easingFn={null}
                      end={0}
                      formattingFn={null}
                      prefix=""
                      redraw={false}
                      separator=""
                      start={0}
                      suffix=""
                      useEasing={true}
                    />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": undefined,
                      "decimal": ".",
                      "decimals": 0,
                      "duration": 3,
                      "easingFn": null,
                      "end": 0,
                      "formattingFn": null,
                      "onComplete": undefined,
                      "onStart": undefined,
                      "prefix": "",
                      "redraw": false,
                      "separator": "",
                      "start": 0,
                      "style": undefined,
                      "suffix": "",
                      "useEasing": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Commits",
                  },
                  "ref": null,
                  "rendered": "Commits",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(StatisticValue)>
                    <CountUp
                      decimal="."
                      decimals={0}
                      duration={3}
                      easingFn={null}
                      end={0}
                      formattingFn={null}
                      prefix=""
                      redraw={false}
                      separator=""
                      start={0}
                      suffix=""
                      useEasing={true}
                    />
                  </Styled(StatisticValue)>,
                  <Styled(StatisticLabel)>
                    Public Gists
                  </Styled(StatisticLabel)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <CountUp
                      decimal="."
                      decimals={0}
                      duration={3}
                      easingFn={null}
                      end={0}
                      formattingFn={null}
                      prefix=""
                      redraw={false}
                      separator=""
                      start={0}
                      suffix=""
                      useEasing={true}
                    />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": undefined,
                      "decimal": ".",
                      "decimals": 0,
                      "duration": 3,
                      "easingFn": null,
                      "end": 0,
                      "formattingFn": null,
                      "onComplete": undefined,
                      "onStart": undefined,
                      "prefix": "",
                      "redraw": false,
                      "separator": "",
                      "start": 0,
                      "style": undefined,
                      "suffix": "",
                      "useEasing": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Public Gists",
                  },
                  "ref": null,
                  "rendered": "Public Gists",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Loader
              active={true}
              inline="centered"
            />,
            "inverted": true,
            "widths": 2,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "active": true,
              "inline": "centered",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
